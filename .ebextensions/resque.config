option_settings:
  - option_name: RESQUE_WORKERS
    value: 2
files:
  "/etc/init/resque.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      start on (started network-interface
                or started network-manager
                or started networking)

      stop on (stopping network-interface
               or stopping network-manager
               or stopping networking)

      pre-start script
        . /opt/elasticbeanstalk/support/envvars
        for i in `seq 1 $RESQUE_WORKERS`
        do
          start resque-worker ID=$i
        done
      end script
    encoding: plain
  "/etc/init/resque-worker.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      stop on stopping resque

      respawn
      respawn limit 5 20

      instance $ID

      post-stop script
        . /opt/elasticbeanstalk/support/envvars
        export ID=$ID
        export PIDFILE=$EB_CONFIG_APP_PIDS/resque-worker-$ID.pid
        exec su - root -c "kill -s SIGQUIT `cat $PIDFILE` && rm -f $PIDFILE >> $EB_CONFIG_APP_LOGS/resque-worker-$ID.log 2>&1"
      end script

      script
        . /opt/elasticbeanstalk/support/envvars
        export ID=$ID
        export PIDFILE=$EB_CONFIG_APP_PIDS/resque-worker-$ID.pid
        echo $$ > $PIDFILE
        chown $EB_CONFIG_APP_USER:$EB_CONFIG_APP_USER $PIDFILE
        exec su - $EB_CONFIG_APP_USER -c "cd $EB_CONFIG_APP_CURRENT; PIDFILE=$PIDFILE QUEUE=* VERBOSE=1 bundle exec rake resque:work --trace >> $EB_CONFIG_APP_LOGS/resque-worker-$ID.log 2>&1"
      end script
    encoding: plain
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_restart_resque.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      stop resque
      start resque
    encoding: plain
