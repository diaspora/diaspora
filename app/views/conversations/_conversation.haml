-#   Copyright (c) 2010-2011, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

.conversation-wrapper{ :"data-conversation-path" => conversation_path(conversation) }
  .stream_element.conversation{:data=>{:guid=>conversation.id}, :class => ('unread' if unread_counts[conversation.id].to_i > 0)}
    .media
      = link_to content_tag(:span, nil, class: 'icons-users', title: t('.participants')), '#', :class => 'participants_link', "data-conversation-id" => conversation.id
      = render :partial => 'participants_popover', :locals => { :conversation => conversation }
      = render(:partial => 'conversation_subject',
                  :locals => { :conversation => conversation,
                               :unread_count => unread_counts[conversation.id].to_i })
      
      .img
        - if authors[conversation.id].present?
          = person_image_tag(authors[conversation.id])

      .bg
        %time.timeago.timestamp{:datetime => conversation.updated_at.iso8601}
          = t('ago', :time =>  time_ago_in_words(conversation.updated_at))
        .last_author

          - if authors[conversation.id].present?
            = authors[conversation.id].name
        .last_message
          - if conversation.messages.present?
            = conversation.messages.last.text[0..40]
 
