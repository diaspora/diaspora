-#   Copyright (c) 2010-2011, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

:javascript
  $(function() {
    $(".question_mark").tipsy({trigger: 'hover', gravity: 'n'});
    $(".service_icon").tipsy({trigger: 'hover', gravity: 'n'});
    $(".public_icon").tipsy({trigger: 'hover', gravity: 'n'});
  });

#publisher.closed{:class => ((aspect == :profile)? 'mention_popup' : nil )}
  .content_creation
    = form_for(StatusMessage.new, :remote => remote?, :html => {"data-type" => "json"}) do |status|
      = status.error_messages
      %p
        %params
          #publisher_textarea_wrapper
            = link_to( image_tag('deletelabel.png'), "#", :id => "hide_publisher", :title => t('.discard_post'))
            %ul#photodropzone
            = status.text_area :fake_text, :rows => 2, :value => h(publisher_prefill_text), :tabindex => 1, :placeholder => t('.whats_on_your_mind')
            = status.hidden_field :text, :value => '', :class => 'clear_on_submit'

            #file-upload{:title => t('.upload_photos')}
              = image_tag 'icons/camera.svg', :height => 14


      - if all_aspects_selected?(selected_aspects)
        = hidden_field_tag 'aspect_ids[]', "all_aspects"
      - else
        - for aspect_id in aspect_ids
          = hidden_field_tag 'aspect_ids[]', aspect_id.to_s

      .options_and_submit
        .public_toggle
          %span#publisher_service_icons
            - if current_user.services
              - for service in current_user.services
                = image_tag "social_media_logos/#{service.provider}-16x16.png", :title => service.provider.titleize, :class => "service_icon dim", :id =>"#{service.provider}", :maxchar => "#{service.class::MAX_CHARACTERS}"
            = link_to (image_tag "icons/monotone_wrench_settings.png"), "#question_mark_pane", :class => 'question_mark', :rel => 'facebox', :title => t('shared.public_explain.manage')


          // NOTE(dropdown special casing to DRY up -- taken from the aspect_dropdown partial)
          .dropdown{:class => "hang_right"}
            .button.toggle.publisher
              - if selected_aspects.size == all_aspects.size
                = t('all_aspects')
              - elsif selected_aspects.size == 1
                = selected_aspects.first.name
              - else
                = t('.toggle', :count => selected_aspects.size)
              &#9660;

            .wrapper
              %ul.dropdown_list{:unSelectable => 'on', 'data-person_id' => (person.id if defined?(person) && person), 'data-service_uid' => (service_uid if defined?(service_uid))}
                %li.public.radio{"data-aspect_id" => "public"}
                  Public

                %li.divider.all_aspects.radio{:style => "border-bottom: 1px solid #ddd;", "data-aspect_id" => "all_aspects", :class => ("selected" if all_aspects_selected?(selected_aspects))}
                  All Aspects

                - for aspect in all_aspects
                  = aspect_dropdown_list_item(aspect, !all_aspects_selected?(selected_aspects) && selected_aspects.include?(aspect) )

          = status.submit t('.share'), :disable_with => t('.posting'), :class => 'button creation', :tabindex => 2

          .facebox_content
            #question_mark_pane
              = render 'shared/public_explain'
    = link_to '', contacts_path(:aspect_ids => aspect_ids), :class => 'selected_contacts_link hidden'


    #publisher_photo_upload
      = render 'photos/new_photo', :aspect_ids => aspect_ids.join(',')

