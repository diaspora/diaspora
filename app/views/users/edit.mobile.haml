-# Copyright (c) 2010-2011, Diaspora Inc. This file is
-# licensed under the Affero General Public License version 3 or later. See
-# the COPYRIGHT file.

- content_for :page_title do
  = t('.edit_account')

.stream
  - flash.each do |name, msg|
    %div{:id => "flash_#{name}", :class => "expose"}
      .message= msg
    .stream
      %p{:class => "conversation_#{name}"}= msg

#section_header
  %h3
    = t('settings')
  = render 'shared/settings_nav'

.span-12.prepend-5.last
  %hr

  %h4
    = t('.your_handle')
  %p
    %b= current_user.diaspora_handle

  %h4
    = t('.your_email')
  = form_for 'user', :url => user_path, :html => { :method => :put } do |f|
    = f.error_messages
    %p
      = f.text_field :email, :value => @user.unconfirmed_email || @user.email
    = f.submit t('.change_email'), :class => "btn"
  - if @user.unconfirmed_email.present?
    %p= t('.email_awaiting_confirmation', :email => @user.email, :unconfirmed_email => @user.unconfirmed_email)

  %hr

  %h4
    = t('.change_password')
  = form_for 'user', :url => user_path, :html => { :method => :put } do |f|
    = f.error_messages
    %p
      = f.label :current_password, t('.current_password')
      = f.password_field :current_password, :placeholder => t('.current_password_expl')
    %p
      = f.label :password, t('.new_password')
      = f.password_field :password, :placeholder => t('.character_minimum_expl')
    %p
      = f.label :password_confirmation, t('password_confirmation')
      = f.password_field :password_confirmation, :placeholder => t('.character_minimum_expl')

    .submit_block
      = f.submit t('.change_password'), :class => "btn"

  %hr

  %h4
    = t('.change_language')
  = form_for 'user', :url => user_path, :html => { :method => :put } do |f|
    = f.error_messages

    %p
      = f.select :language, available_language_options
    = f.submit t('.change_language'), :class => "btn"

  %hr

  %h4#stream-preferences
    = t('.stream_preferences')
  = form_for current_user, :url => user_path, :html => { :method => :put } do |f|
    = f.error_messages

    = f.fields_for :stream_preferences do |type|
      #stream_prefs
      %p.checkbox_select
        = f.label :show_community_spotlight_in_stream, t('.show_community_spotlight')
        = f.check_box :show_community_spotlight_in_stream

      %br
      %p.checkbox_select
        = f.label :getting_started, t('.show_getting_started')
        = f.check_box :getting_started

      %br
      = f.submit t('.change'), :class => 'button'

  %hr
  
  %h4#auto-follow-back-preferences
    = t('.following')
  = form_for current_user, :url => user_path, :html => { :method => :put } do |f|
    = f.error_messages
  
    %p.checkbox_select
      = f.label :auto_follow_back, t('.auto_follow_back')
      = f.check_box :auto_follow_back
    %br
    %p.checkbox_select
      %span{:style => "color: #999"}
        = t('.auto_follow_aspect')
      = f.select :auto_follow_back_aspect_id, aspect_options_for_select(current_user.aspects)
    %br
    = f.submit t('.change'), :class => 'btn'

  %hr

  %h4
    = t('.receive_email_notifications')
  = form_for 'user', :url => user_path, :html => { :method => :put } do |f|
    = f.error_messages

    = f.fields_for :email_preferences do |type|
      #email_prefs
        %p.checkbox_select
          = type.label :started_sharing, t('.started_sharing')
          = type.check_box :started_sharing, {:checked =>  @email_prefs['started_sharing']}, false, true
        %br

        %p.checkbox_select
          = type.label :mentioned, t('.mentioned') 
          = type.check_box :mentioned, {:checked =>  @email_prefs['mentioned']}, false, true
        %br
        
        %p.checkbox_select
          = type.label :liked, t('.liked')
          = type.check_box :liked, {:checked =>  @email_prefs['liked']}, false, true
        %br
        
        %p.checkbox_select
          = type.label :reshared, t('.reshared')
          = type.check_box :reshared, {:checked =>  @email_prefs['reshared']}, false, true
        %br
        
        %p.checkbox_select
          = type.label :comment_on_post, t('.comment_on_post')
          = type.check_box :comment_on_post, {:checked =>  @email_prefs['comment_on_post']}, false, true
        %br
        
        %p.checkbox_select
          = type.label :also_commented, t('.also_commented')
          = type.check_box :also_commented, {:checked =>  @email_prefs['also_commented']}, false, true
        %br
        
        %p.checkbox_select
          = type.label :private_message, t('.private_message')
          = type.check_box :private_message, {:checked =>  @email_prefs['private_message']}, false, true

    %br
    = f.submit t('.change'), :class => "button"

  %hr

  #account_data.span-5.append-2
    %h4
      = t('.export_data')
    = link_to t('.download_xml'), export_user_path, :class => "btn"
    %br
    %br
    = link_to t('.download_photos'), "#", :class => "btn", :id => "photo-export-button", :title => t('.photo_export_unavailable')

  .span-5.last
    %h4
      = t('.close_account_text')
    =link_to t('.close_account_text'), '#close_account_pane', :rel => 'facebox', :class => "btn", :id => "close_account"

    .hidden#close_account_pane{:rel => 'facebox'}
      #inner_account_delete
        %h1
          = t('.close_account.dont_go')
        %p
          = t('.close_account.make_diaspora_better')
        .span-10
          = image_tag 'http://itstrulyrandom.com/wp-content/uploads/2008/03/sadcat.jpg'
          %br
          %small
            %b
              = t('.close_account.mr_wiggles')
        .span-10.last
          %ul
            %li
              = t('.close_account.what_we_delete')
            %li
              = t('.close_account.locked_out')
            %li
              = t('.close_account.lock_username')
          %p
            %b
              = t('.close_account.no_turning_back')
              

          = form_for 'user', :url => user_path, :html => { :method => :delete } do |f|
            = f.error_messages

            %p
              = f.label :close_account_password, t('.current_password'), :for => :close_account_password
              = f.password_field :current_password, :id => :close_account_password
            %p
              = f.submit t('.close_account_text'), :id => "close_account_confirm", :data => { :confirm => t('are_you_sure_delete_account') }
