cscript /nologo client-install.vbs <%= @config[:proxy] %>

> c:/chef/etc/client.rb (
 @echo.log_level        :info
 @echo.log_location     STDOUT
 @echo.chef_server_url  "<%= Chef::Config[:chef_server_url] %>"
 @echo.validation_client_name "<%= Chef::Config[:validation_client_name] %>"
 @echo.client_key "c:/chef/etc/client.pem"
 @echo.validation_key "c:/chef/etc/validation.pem"
 @echo.checksum_path "c:/chef/var/checksums"
 @echo.file_cache_path "c:/chef/var/cache"
 @echo.file_backup_path "c:/chef/var/backup"
 @echo.cache_options ^( {:path, "c:/chef/var/cache/checksums", :skip_expires, true} ^)
<% if Chef::Config[:http_proxy] != nil %>
 @echo.http_proxy       "<%= Chef::Config[:http_proxy] %>"
<% end %>
<% if Chef::Config[:https_proxy] != nil %>
 @echo.https_proxy       "<%= Chef::Config[:https_proxy] %>"
<% end %>
<% if Chef::Config[:no_proxy] != nil %>
 @echo.no_proxy          "<%= Chef::Config[:no_proxy] %>"
<% end %>
<% if @config[:chef_node_name] == nil %>
 @echo.# Using default node name
<% else %>
 @echo.node_name "<%= @config[:chef_node_name] %>"
<% end %> 
)

> c:/chef/etc/first-boot.json (
 @echo.<%= { "run_list" => @run_list }.to_json %>
)

c:/ruby/bin/ruby c:/ruby/bin/chef-client -c c:/chef/etc/client.rb -j c:/chef/etc/first-boot.json -l <%= Chef::Config[:log_level] %>"
