<% found_method = false %>
<% object.inheritance_tree(true)[1..-1].each do |superclass| %>
  <% next if superclass.is_a?(YARD::CodeObjects::Proxy) %>
  <% attribs = superclass.attributes[:instance] %>
  <% next if attribs.size == 0 %>
  <% if attr_listing.size == 0 && !found_method %><h2>Instance Attribute Summary</h2><% end %>
  <% found_method = true %>
  <h3 class="inherited">Attributes <%= superclass.type == :class ? 'inherited' : 'included' %> from <%= linkify superclass %></h3>
  <p class="inherited"><%=
    attribs.sort_by {|args| args.first.to_s }.collect do |args|
      name, methods = args
      method = methods[:read] || methods[:write]
      name = method.name.to_s.gsub(/^#/,'') if superclass.type == :module && object.class_mixins.include?(superclass)
      linkify(method, name)
    end.join(", ")
  %></p>
<% end %>
